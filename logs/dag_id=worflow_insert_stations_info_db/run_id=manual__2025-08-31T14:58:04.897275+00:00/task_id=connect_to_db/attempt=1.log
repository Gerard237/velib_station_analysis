{"timestamp":"2025-08-31T14:58:06.042651","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-31T14:58:06.043285","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/get_station_data.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T14:58:06.125219","level":"info","event":"Done. Returned value was: (<connection object at 0x7fbd2c77a480; dsn: 'user=airflow password=xxx dbname=airflow host=postgres port=5432', closed: 0>, <cursor object at 0x7fbd2c857e20; closed: 0>)","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-31T14:58:06.125490","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019900a2-abf2-7d9a-8291-e26eff226941'), task_id='connect_to_db', dag_id='worflow_insert_stations_info_db', run_id='manual__2025-08-31T14:58:04.897275+00:00', try_number=1, map_index=-1, hostname='259ddabe72b2', context_carrier={}, task=<Task(PythonOperator): connect_to_db>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 31, 14, 58, 5, 766104, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/worflow_insert_stations_info_db/runs/manual__2025-08-31T14%3A58%3A04.897275%2B00%3A00/tasks/connect_to_db?try_number=1')","logger":"task"}
{"timestamp":"2025-08-31T14:58:06.125934","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize object of type <class 'psycopg2.extensions.connection'>","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":931,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1278,"name":"_push_xcom_if_needed"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":561,"name":"_xcom_push"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":75,"name":"set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/xcom.py","lineno":337,"name":"serialize_value"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":152,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":129,"name":"serialize"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py","lineno":185,"name":"serialize"}],"is_group":false,"exceptions":[]}]}
